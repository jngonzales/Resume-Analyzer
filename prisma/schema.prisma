// This is your Prisma schema file

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  analyses      Analysis[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Analysis {
  id              String   @id @default(cuid())
  userId          String
  fileName        String
  fileUrl         String
  fileSize        Int
  fileType        String
  overallScore    Int
  atsScore        Int
  readabilityScore Int
  skillsFound     String[] // Array of skills found
  missingSkills   String[] // Suggested skills to add
  suggestions     Json     // Detailed suggestions
  grammarIssues   Json     // Grammar and spelling issues
  keywords        String[] // Important keywords
  analyzedAt      DateTime @default(now())
  
  user            User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}
